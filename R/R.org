# Content
# R
## Getting R

### Documentation of function:
?function_name

### Packages

### Vector

- access a line: vec_name[line] (from 1)
- remove a line: vec_name[-line]
- apply a function to all elements: sapply(vec_name, name) (ex: sapply(myvector, mean)

### Plotting
- simple graph from data plot(x=grasp_arpd[1:30,3], y=sa_arpd[1:30,3], main="a-rpd correlation", xlab="a-rpd for GRASP", ylab="a-rpd for Simulated Annealing", col="red")
- add points: points(x2, y2, pch=16, col="green")
- add line: abline(myline.fit) (after linear regression for example)


### Data set

- import a dataset: read.csv(name, header=F, sep=";")
- access a column: dataset[, #colNumber] (starting from 1)
- add a column to a dataset: cbind(dataset, new column)
- rename a vector: names(vector) <- "newName"
- operations on vectors: res <- colA*colB/colC
- export a dataset: write.csv(dataset, "name.csv")
- names of the columns: colnames
- matrix to data frame: as.data.frame

#### Get file names in a directory

	dir(path="yourPath", pattern="file pattern")
	dir(path="../res", pattern='\\.txt$')

#### append strings
	paste(stringA, stringB, sep="separator")

#### create a matrix:
	matrix(, nrow = 15, ncol = 0)
#### sum of a col:
	col.Sums()
#### mean of a col:
	col.Means
#### add names to columns of a matrix
	colnames(mat) <- c("name1", ...)

## Supervised learning
function:   rpart (decision trees)
            lm (linear model)
            nnet (neural network)
            ridge (you need ridge and RcppGSL packages)
